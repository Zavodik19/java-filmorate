DROP TABLE IF EXISTS users, films, MPA, genres, friends, film_likes, film_genre CASCADE;

CREATE TABLE IF NOT EXISTS MPA (
    rating_mpa_id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
    film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR (300),
    release_date DATE,
    duration INT,
    mpa_id INT REFERENCES MPA (rating_mpa_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    login VARCHAR(100) NOT NULL,
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre (
    film_id INT REFERENCES films(film_id),
    genre_id INT REFERENCES genres(genre_id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
    user_id INT REFERENCES users(user_id),
    film_id INT REFERENCES films(film_id),
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS friends (
    user_id integer REFERENCES users (user_id) ON DELETE CASCADE NOT NULL,
    friend_id integer REFERENCES users (user_id) ON DELETE CASCADE NOT NULL,
    PRIMARY KEY (user_id, friend_id)
);